{"ast":null,"code":"var _jsxFileName = \"/Users/thanawan/Collection/gen-ai/frontend/src/SignUpSide.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Avatar, Button, CssBaseline, TextField, FormControlLabel, Checkbox, Link, Grid, Box, Typography, Container, createTheme, ThemeProvider, styled } from \"@mui/material\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\nconst Paper = styled(\"div\")(({\n  theme\n}) => ({\n  marginTop: theme.spacing(8),\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  width: \"100%\"\n}));\n_c = Paper;\nconst StyledAvatar = styled(Avatar)(({\n  theme\n}) => ({\n  margin: theme.spacing(1),\n  backgroundColor: theme.palette.secondary.main\n}));\n_c2 = StyledAvatar;\nconst Form = styled(\"form\")(({\n  theme\n}) => ({\n  width: \"100%\",\n  marginTop: theme.spacing(3)\n}));\n_c3 = Form;\nconst SubmitButton = styled(Button)(({\n  theme\n}) => ({\n  margin: theme.spacing(3, 0, 2)\n}));\n_c4 = SubmitButton;\nexport default function SignUp() {\n  _s();\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    allowExtraEmails: false\n  });\n\n  // State for toggling visibility of both password fields\n  const [showPassword, setShowPassword] = useState(false);\n  const togglePasswordVisibility = () => {\n    setShowPassword(prev => !prev);\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = event.target;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: type === \"checkbox\" ? checked : value\n    }));\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // Your signup handling logic goes here...\n  };\n\n  // Regex rules: email must be in proper email format and\n  // password must be at least 8 characters long with at least one letter and one number.\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n  const emailIsValid = emailRegex.test(formData.email);\n  const passwordIsValid = passwordRegex.test(formData.password);\n  const passwordsMatch = formData.password === formData.confirmPassword;\n\n  // Check that all required fields are filled and are valid.\n  const isFormValid = formData.firstName.trim() !== \"\" && formData.lastName.trim() !== \"\" && formData.email.trim() !== \"\" && emailIsValid && formData.password.trim() !== \"\" && passwordIsValid && formData.confirmPassword.trim() !== \"\" && passwordsMatch;\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        children: [/*#__PURE__*/_jsxDEV(StyledAvatar, {\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          noValidate: true,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: \"flex\",\n                gap: 2,\n                width: \"100%\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                autoComplete: \"given-name\",\n                name: \"firstName\",\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                id: \"firstName\",\n                label: \"First Name\",\n                autoFocus: true,\n                sx: {\n                  flexGrow: 1\n                },\n                value: formData.firstName,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                id: \"lastName\",\n                label: \"Last Name\",\n                name: \"lastName\",\n                autoComplete: \"family-name\",\n                sx: {\n                  flexGrow: 1\n                },\n                value: formData.lastName,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              id: \"email\",\n              label: \"Email Address\",\n              name: \"email\",\n              autoComplete: \"email\",\n              value: formData.email,\n              onChange: handleChange,\n              error: formData.email.trim() !== \"\" && !emailIsValid,\n              helperText: formData.email.trim() !== \"\" && !emailIsValid ? \"Please enter a valid email address.\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              name: \"password\",\n              label: \"Password\",\n              type: showPassword ? \"text\" : \"password\",\n              id: \"password\",\n              autoComplete: \"new-password\",\n              value: formData.password,\n              onChange: handleChange,\n              error: formData.password.trim() !== \"\" && !passwordIsValid,\n              helperText: formData.password.trim() !== \"\" && !passwordIsValid ? \"Password must be at least 8 characters, with at least one letter and one number.\" : \"\",\n              InputProps: {\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: togglePasswordVisibility,\n                    edge: \"end\",\n                    children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 65\n                    }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 85\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 41\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              name: \"confirmPassword\",\n              label: \"Confirm Password\",\n              type: showPassword ? \"text\" : \"password\",\n              id: \"confirmPassword\",\n              autoComplete: \"new-password\",\n              value: formData.confirmPassword,\n              onChange: handleChange,\n              error: formData.confirmPassword.trim() !== \"\" && !passwordsMatch,\n              helperText: formData.confirmPassword.trim() !== \"\" && !passwordsMatch ? \"Passwords do not match.\" : \"\",\n              InputProps: {\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: togglePasswordVisibility,\n                    edge: \"end\",\n                    children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 65\n                    }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 85\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 41\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            disabled: !isFormValid,\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/\",\n                variant: \"body2\",\n                children: \"Already have an account? Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n_s(SignUp, \"c1CQwMB5jl1dctroKZmuF//SE9A=\");\n_c5 = SignUp;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Paper\");\n$RefreshReg$(_c2, \"StyledAvatar\");\n$RefreshReg$(_c3, \"Form\");\n$RefreshReg$(_c4, \"SubmitButton\");\n$RefreshReg$(_c5, \"SignUp\");","map":{"version":3,"names":["React","useState","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","Typography","Container","createTheme","ThemeProvider","styled","LockOutlinedIcon","IconButton","InputAdornment","Visibility","VisibilityOff","jsxDEV","_jsxDEV","theme","Paper","marginTop","spacing","display","flexDirection","alignItems","width","_c","StyledAvatar","margin","backgroundColor","palette","secondary","main","_c2","Form","_c3","SubmitButton","_c4","SignUp","_s","formData","setFormData","firstName","lastName","email","password","confirmPassword","allowExtraEmails","showPassword","setShowPassword","togglePasswordVisibility","prev","handleChange","event","name","value","type","checked","target","prevFormData","handleSubmit","preventDefault","emailRegex","passwordRegex","emailIsValid","test","passwordIsValid","passwordsMatch","isFormValid","trim","children","component","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","variant","noValidate","onSubmit","container","sx","gap","autoComplete","required","fullWidth","id","label","autoFocus","flexGrow","onChange","error","helperText","InputProps","endAdornment","position","onClick","edge","disabled","justifyContent","item","href","_c5","$RefreshReg$"],"sources":["/Users/thanawan/Collection/gen-ai/frontend/src/SignUpSide.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    TextField,\n    FormControlLabel,\n    Checkbox,\n    Link,\n    Grid,\n    Box,\n    Typography,\n    Container,\n    createTheme,\n    ThemeProvider,\n    styled,\n} from \"@mui/material\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\n\nconst theme = createTheme();\n\nconst Paper = styled(\"div\")(({ theme }) => ({\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\",\n}));\n\nconst StyledAvatar = styled(Avatar)(({ theme }) => ({\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n}));\n\nconst Form = styled(\"form\")(({ theme }) => ({\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n}));\n\nconst SubmitButton = styled(Button)(({ theme }) => ({\n    margin: theme.spacing(3, 0, 2),\n}));\n\nexport default function SignUp() {\n    const [formData, setFormData] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        allowExtraEmails: false,\n    });\n\n    // State for toggling visibility of both password fields\n    const [showPassword, setShowPassword] = useState(false);\n\n    const togglePasswordVisibility = () => {\n        setShowPassword((prev) => !prev);\n    };\n\n    const handleChange = (event) => {\n        const { name, value, type, checked } = event.target;\n        setFormData((prevFormData) => ({\n            ...prevFormData,\n            [name]: type === \"checkbox\" ? checked : value,\n        }));\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        // Your signup handling logic goes here...\n    };\n\n    // Regex rules: email must be in proper email format and\n    // password must be at least 8 characters long with at least one letter and one number.\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n\n    const emailIsValid = emailRegex.test(formData.email);\n    const passwordIsValid = passwordRegex.test(formData.password);\n    const passwordsMatch = formData.password === formData.confirmPassword;\n\n    // Check that all required fields are filled and are valid.\n    const isFormValid =\n        formData.firstName.trim() !== \"\" &&\n        formData.lastName.trim() !== \"\" &&\n        formData.email.trim() !== \"\" &&\n        emailIsValid &&\n        formData.password.trim() !== \"\" &&\n        passwordIsValid &&\n        formData.confirmPassword.trim() !== \"\" &&\n        passwordsMatch;\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <Paper>\n                    <StyledAvatar>\n                        <LockOutlinedIcon />\n                    </StyledAvatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign up\n                    </Typography>\n                    <Form noValidate onSubmit={handleSubmit}>\n                        <Grid container spacing={2}>\n                            <Box sx={{ display: \"flex\", gap: 2, width: \"100%\" }}>\n                                <TextField\n                                    autoComplete=\"given-name\"\n                                    name=\"firstName\"\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"firstName\"\n                                    label=\"First Name\"\n                                    autoFocus\n                                    sx={{ flexGrow: 1 }}\n                                    value={formData.firstName}\n                                    onChange={handleChange}\n                                />\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"lastName\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    autoComplete=\"family-name\"\n                                    sx={{ flexGrow: 1 }}\n                                    value={formData.lastName}\n                                    onChange={handleChange}\n                                />\n                            </Box>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                value={formData.email}\n                                onChange={handleChange}\n                                error={formData.email.trim() !== \"\" && !emailIsValid}\n                                helperText={\n                                    formData.email.trim() !== \"\" && !emailIsValid\n                                        ? \"Please enter a valid email address.\"\n                                        : \"\"\n                                }\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type={showPassword ? \"text\" : \"password\"}\n                                id=\"password\"\n                                autoComplete=\"new-password\"\n                                value={formData.password}\n                                onChange={handleChange}\n                                error={formData.password.trim() !== \"\" && !passwordIsValid}\n                                helperText={\n                                    formData.password.trim() !== \"\" && !passwordIsValid\n                                        ? \"Password must be at least 8 characters, with at least one letter and one number.\"\n                                        : \"\"\n                                }\n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton onClick={togglePasswordVisibility} edge=\"end\">\n                                                {showPassword ? <VisibilityOff /> : <Visibility />}\n                                            </IconButton>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"confirmPassword\"\n                                label=\"Confirm Password\"\n                                type={showPassword ? \"text\" : \"password\"}\n                                id=\"confirmPassword\"\n                                autoComplete=\"new-password\"\n                                value={formData.confirmPassword}\n                                onChange={handleChange}\n                                error={formData.confirmPassword.trim() !== \"\" && !passwordsMatch}\n                                helperText={\n                                    formData.confirmPassword.trim() !== \"\" && !passwordsMatch\n                                        ? \"Passwords do not match.\"\n                                        : \"\"\n                                }\n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton onClick={togglePasswordVisibility} edge=\"end\">\n                                                {showPassword ? <VisibilityOff /> : <Visibility />}\n                                            </IconButton>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                        </Grid>\n                        <SubmitButton\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            disabled={!isFormValid}\n                        >\n                            Sign Up\n                        </SubmitButton>\n                        <Grid container justifyContent=\"flex-end\">\n                            <Grid item>\n                                <Link href=\"/\" variant=\"body2\">\n                                    Already have an account? Sign in\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </Form>\n                </Paper>\n            </Container>\n        </ThemeProvider>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}