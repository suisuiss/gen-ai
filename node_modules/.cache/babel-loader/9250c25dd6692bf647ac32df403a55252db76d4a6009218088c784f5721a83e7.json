{"ast":null,"code":"var _jsxFileName = \"/Users/thanawan/Collection/gen-ai/frontend/src/SignUpSide.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Avatar, Button, CssBaseline, TextField, FormControlLabel, Checkbox, Link, Grid, Box, Typography, Container, createTheme, ThemeProvider, styled } from \"@mui/material\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport IconButton from '@mui/material/IconButton';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\nconst Paper = styled(\"div\")(({\n  theme\n}) => ({\n  marginTop: theme.spacing(8),\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  width: \"100%\"\n}));\n_c = Paper;\nconst StyledAvatar = styled(Avatar)(({\n  theme\n}) => ({\n  margin: theme.spacing(1),\n  backgroundColor: theme.palette.secondary.main\n}));\n_c2 = StyledAvatar;\nconst Form = styled(\"form\")(({\n  theme\n}) => ({\n  width: \"100%\",\n  marginTop: theme.spacing(3)\n}));\n_c3 = Form;\nconst SubmitButton = styled(Button)(({\n  theme\n}) => ({\n  margin: theme.spacing(3, 0, 2)\n}));\n_c4 = SubmitButton;\nexport default function SignUp() {\n  _s();\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    allowExtraEmails: false\n  });\n\n  // For handling the show/hide password icon\n  const [showPassword, setShowPassword] = useState(false);\n  const togglePasswordVisibility = () => {\n    setShowPassword(prev => !prev);\n  };\n\n  // For email availability error handling.\n  const [emailError, setEmailError] = useState(\"\");\n\n  // Called onBlur from the email field.\n  const checkEmailAvailability = async () => {\n    const email = formData.email.trim();\n    if (email === \"\") {\n      setEmailError(\"\");\n      return;\n    }\n    try {\n      // Replace with your actual endpoint.\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/check-email?email=${email}`);\n      const data = await response.json();\n      if (response.ok) {\n        if (data.available === false) {\n          setEmailError(\"This email is already used.\");\n        } else {\n          setEmailError(\"\");\n        }\n      } else {\n        setEmailError(\"Could not verify email.\");\n      }\n    } catch (error) {\n      setEmailError(\"An error occurred while checking email.\");\n    }\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = event.target;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: type === \"checkbox\" ? checked : value\n    }));\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Client-side check: passwords must match.\n    if (formData.password !== formData.confirmPassword) {\n      alert(\"Passwords do not match!\");\n      return;\n    }\n\n    // Validate password format: At least 8 characters, one letter and one number.\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n    if (!passwordRegex.test(formData.password)) {\n      alert(\"Password must be at least 8 characters long and contain both letters and numbers.\");\n      return;\n    }\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/signup`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(\"Signup successful!\");\n        // Optional: clear form data.\n        setFormData({\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          password: \"\",\n          confirmPassword: \"\",\n          allowExtraEmails: false\n        });\n      } else {\n        alert(`Signup failed: ${data.message || \"Unknown error\"}`);\n      }\n    } catch (error) {\n      console.error(\"Signup error:\", error);\n      alert(\"An error occurred. Please try again.\");\n    }\n  };\n\n  // For UI feedback: check password format and match.\n  const passwordError = formData.password && !/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/.test(formData.password);\n  const confirmPasswordError = formData.confirmPassword && formData.password !== formData.confirmPassword;\n\n  // Form is valid if every required field is filled, passwords match and meet criteria,\n  // and there is no email error.\n  const isFormValid = formData.firstName.trim() !== \"\" && formData.lastName.trim() !== \"\" && formData.email.trim() !== \"\" && formData.password.trim() !== \"\" && formData.confirmPassword.trim() !== \"\" && formData.password === formData.confirmPassword && /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/.test(formData.password) && emailError === \"\";\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        children: [/*#__PURE__*/_jsxDEV(StyledAvatar, {\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          noValidate: true,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: \"flex\",\n                gap: 2,\n                width: \"100%\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                autoComplete: \"given-name\",\n                name: \"firstName\",\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                id: \"firstName\",\n                label: \"First Name\",\n                autoFocus: true,\n                sx: {\n                  flexGrow: 1\n                },\n                value: formData.firstName,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                id: \"lastName\",\n                label: \"Last Name\",\n                name: \"lastName\",\n                autoComplete: \"family-name\",\n                sx: {\n                  flexGrow: 1\n                },\n                value: formData.lastName,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                id: \"email\",\n                label: \"Email Address\",\n                name: \"email\",\n                autoComplete: \"email\",\n                value: formData.email,\n                onChange: handleChange,\n                onBlur: checkEmailAvailability // check if email is already used\n                ,\n                error: Boolean(emailError),\n                helperText: emailError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                name: \"password\",\n                label: \"Password\",\n                type: showPassword ? \"text\" : \"password\",\n                id: \"password\",\n                autoComplete: \"new-password\",\n                value: formData.password,\n                onChange: handleChange,\n                error: Boolean(passwordError),\n                helperText: passwordError ? \"Password must be at least 8 characters long and contain both letters and numbers.\" : \"\",\n                InputProps: {\n                  endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"end\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      onClick: togglePasswordVisibility,\n                      edge: \"end\",\n                      children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 245,\n                        columnNumber: 69\n                      }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 245,\n                        columnNumber: 89\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 45\n                  }, this)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                name: \"confirmPassword\",\n                label: \"Confirm Password\",\n                type: showPassword ? \"text\" : \"password\",\n                id: \"confirmPassword\",\n                autoComplete: \"new-password\",\n                value: formData.confirmPassword,\n                onChange: handleChange,\n                error: Boolean(confirmPasswordError),\n                helperText: confirmPasswordError ? \"Passwords do not match.\" : \"\",\n                InputProps: {\n                  endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"end\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      onClick: togglePasswordVisibility,\n                      edge: \"end\",\n                      children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 272,\n                        columnNumber: 69\n                      }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 272,\n                        columnNumber: 89\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 45\n                  }, this)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            disabled: !isFormValid // Disable when form is incomplete or email is used\n            ,\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/\",\n                variant: \"body2\",\n                children: \"Already have an account? Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 9\n  }, this);\n}\n_s(SignUp, \"ZAwc+k8UXS9gyC31Nyf2+B6TZ74=\");\n_c5 = SignUp;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Paper\");\n$RefreshReg$(_c2, \"StyledAvatar\");\n$RefreshReg$(_c3, \"Form\");\n$RefreshReg$(_c4, \"SubmitButton\");\n$RefreshReg$(_c5, \"SignUp\");","map":{"version":3,"names":["React","useState","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","Typography","Container","createTheme","ThemeProvider","styled","LockOutlinedIcon","IconButton","InputAdornment","Visibility","VisibilityOff","jsxDEV","_jsxDEV","theme","Paper","marginTop","spacing","display","flexDirection","alignItems","width","_c","StyledAvatar","margin","backgroundColor","palette","secondary","main","_c2","Form","_c3","SubmitButton","_c4","SignUp","_s","formData","setFormData","firstName","lastName","email","password","confirmPassword","allowExtraEmails","showPassword","setShowPassword","togglePasswordVisibility","prev","emailError","setEmailError","checkEmailAvailability","trim","response","fetch","process","env","REACT_APP_API_URL","data","json","ok","available","error","handleChange","event","name","value","type","checked","target","prevFormData","handleSubmit","preventDefault","alert","passwordRegex","test","method","headers","body","JSON","stringify","message","console","passwordError","confirmPasswordError","isFormValid","children","component","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","variant","noValidate","onSubmit","container","sx","gap","autoComplete","required","fullWidth","id","label","autoFocus","flexGrow","onChange","item","xs","onBlur","Boolean","helperText","InputProps","endAdornment","position","onClick","edge","disabled","justifyContent","href","_c5","$RefreshReg$"],"sources":["/Users/thanawan/Collection/gen-ai/frontend/src/SignUpSide.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    TextField,\n    FormControlLabel,\n    Checkbox,\n    Link,\n    Grid,\n    Box,\n    Typography,\n    Container,\n    createTheme,\n    ThemeProvider,\n    styled,\n} from \"@mui/material\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport IconButton from '@mui/material/IconButton';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\nconst theme = createTheme();\n\nconst Paper = styled(\"div\")(({ theme }) => ({\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\",\n}));\n\nconst StyledAvatar = styled(Avatar)(({ theme }) => ({\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n}));\n\nconst Form = styled(\"form\")(({ theme }) => ({\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n}));\n\nconst SubmitButton = styled(Button)(({ theme }) => ({\n    margin: theme.spacing(3, 0, 2),\n}));\n\nexport default function SignUp() {\n    const [formData, setFormData] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        allowExtraEmails: false,\n    });\n\n    // For handling the show/hide password icon\n    const [showPassword, setShowPassword] = useState(false);\n    const togglePasswordVisibility = () => {\n        setShowPassword((prev) => !prev);\n    };\n\n    // For email availability error handling.\n    const [emailError, setEmailError] = useState(\"\");\n\n    // Called onBlur from the email field.\n    const checkEmailAvailability = async () => {\n        const email = formData.email.trim();\n        if (email === \"\") {\n            setEmailError(\"\");\n            return;\n        }\n        try {\n            // Replace with your actual endpoint.\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/api/check-email?email=${email}`);\n            const data = await response.json();\n            if (response.ok) {\n                if (data.available === false) {\n                    setEmailError(\"This email is already used.\");\n                } else {\n                    setEmailError(\"\");\n                }\n            } else {\n                setEmailError(\"Could not verify email.\");\n            }\n        } catch (error) {\n            setEmailError(\"An error occurred while checking email.\");\n        }\n    };\n\n    const handleChange = (event) => {\n        const { name, value, type, checked } = event.target;\n        setFormData((prevFormData) => ({\n            ...prevFormData,\n            [name]: type === \"checkbox\" ? checked : value,\n        }));\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        // Client-side check: passwords must match.\n        if (formData.password !== formData.confirmPassword) {\n            alert(\"Passwords do not match!\");\n            return;\n        }\n\n        // Validate password format: At least 8 characters, one letter and one number.\n        const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n        if (!passwordRegex.test(formData.password)) {\n            alert(\n                \"Password must be at least 8 characters long and contain both letters and numbers.\"\n            );\n            return;\n        }\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/api/signup`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(formData),\n            });\n\n            const data = await response.json();\n            if (response.ok) {\n                alert(\"Signup successful!\");\n                // Optional: clear form data.\n                setFormData({\n                    firstName: \"\",\n                    lastName: \"\",\n                    email: \"\",\n                    password: \"\",\n                    confirmPassword: \"\",\n                    allowExtraEmails: false,\n                });\n            } else {\n                alert(`Signup failed: ${data.message || \"Unknown error\"}`);\n            }\n        } catch (error) {\n            console.error(\"Signup error:\", error);\n            alert(\"An error occurred. Please try again.\");\n        }\n    };\n\n    // For UI feedback: check password format and match.\n    const passwordError =\n        formData.password &&\n        !/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/.test(formData.password);\n    const confirmPasswordError =\n        formData.confirmPassword && formData.password !== formData.confirmPassword;\n\n    // Form is valid if every required field is filled, passwords match and meet criteria,\n    // and there is no email error.\n    const isFormValid =\n        formData.firstName.trim() !== \"\" &&\n        formData.lastName.trim() !== \"\" &&\n        formData.email.trim() !== \"\" &&\n        formData.password.trim() !== \"\" &&\n        formData.confirmPassword.trim() !== \"\" &&\n        formData.password === formData.confirmPassword &&\n        /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/.test(formData.password) &&\n        emailError === \"\";\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <Paper>\n                    <StyledAvatar>\n                        <LockOutlinedIcon />\n                    </StyledAvatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign up\n                    </Typography>\n                    <Form noValidate onSubmit={handleSubmit}>\n                        <Grid container spacing={2}>\n                            <Box sx={{ display: \"flex\", gap: 2, width: \"100%\" }}>\n                                <TextField\n                                    autoComplete=\"given-name\"\n                                    name=\"firstName\"\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"firstName\"\n                                    label=\"First Name\"\n                                    autoFocus\n                                    sx={{ flexGrow: 1 }}\n                                    value={formData.firstName}\n                                    onChange={handleChange}\n                                />\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"lastName\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    autoComplete=\"family-name\"\n                                    sx={{ flexGrow: 1 }}\n                                    value={formData.lastName}\n                                    onChange={handleChange}\n                                />\n                            </Box>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    value={formData.email}\n                                    onChange={handleChange}\n                                    onBlur={checkEmailAvailability}  // check if email is already used\n                                    error={Boolean(emailError)}\n                                    helperText={emailError}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type={showPassword ? \"text\" : \"password\"}\n                                    id=\"password\"\n                                    autoComplete=\"new-password\"\n                                    value={formData.password}\n                                    onChange={handleChange}\n                                    error={Boolean(passwordError)}\n                                    helperText={\n                                        passwordError\n                                            ? \"Password must be at least 8 characters long and contain both letters and numbers.\"\n                                            : \"\"\n                                    }\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <IconButton onClick={togglePasswordVisibility} edge=\"end\">\n                                                    {showPassword ? <VisibilityOff /> : <Visibility />}\n                                                </IconButton>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"confirmPassword\"\n                                    label=\"Confirm Password\"\n                                    type={showPassword ? \"text\" : \"password\"}\n                                    id=\"confirmPassword\"\n                                    autoComplete=\"new-password\"\n                                    value={formData.confirmPassword}\n                                    onChange={handleChange}\n                                    error={Boolean(confirmPasswordError)}\n                                    helperText={\n                                        confirmPasswordError ? \"Passwords do not match.\" : \"\"\n                                    }\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <IconButton onClick={togglePasswordVisibility} edge=\"end\">\n                                                    {showPassword ? <VisibilityOff /> : <Visibility />}\n                                                </IconButton>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n                        <SubmitButton\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            disabled={!isFormValid} // Disable when form is incomplete or email is used\n                        >\n                            Sign Up\n                        </SubmitButton>\n                        <Grid container justifyContent=\"flex-end\">\n                            <Grid item>\n                                <Link href=\"/\" variant=\"body2\">\n                                    Already have an account? Sign in\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </Form>\n                </Paper>\n            </Container>\n        </ThemeProvider>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}